#codecov = { repository = "...", branch = "master", service = "github" }
#coveralls = { repository = "...", branch = "master", service = "github" }

# The development profile, used for `cargo build`
[profile.dev]
opt-level = 0  # Controls the --opt-level the compiler builds with
debug = true   # Controls whether the compiler passes `-g`
rpath = false  # Controls whether the compiler passes `-C rpath`
lto = false    # Controls `-C lto` for binaries and static libs
debug-assertions = true  # Controls whether debug assertions are enabled
codegen-units = 1 # Controls whether the compiler passes `-C codegen-units`
                  # `codegen-units` is ignored when `lto = true`
panic = "unwind"

# The release profile, used for `cargo build --release`
[profile.release]
opt-level = 3
debug = false # change to true if you want symbols while profiling
rpath = false
lto = false
debug-assertions = false
codegen-units = 1
panic = "unwind"

# The testing profile, used for `cargo test`
[profile.test]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 1

# The benchmarking profile, used for `cargo bench`
[profile.bench]
opt-level = 3
debug = false
rpath = false
lto = false
debug-assertions = false
codegen-units = 1

# The documentation profile, used for `cargo doc`
[profile.doc]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 1

[workspace]
members = ["flowc", "flowr", "provider", "flowrlib", "flowclib", "nodeprovider", "flow_impl_derive"]
default-members = ["flowc"]
# These libraries are excluded as they must compile for the wasm target
# independently, and if they are part of the workspace they inherit other
# dependencies that don't compile for wasm
exclude = ["ide", "ide-native"]
