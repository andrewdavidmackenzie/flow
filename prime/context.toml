flow = "prime"

# Read the limit from the command line
[[process]]
alias = "args"
source = "lib://flowruntime/args/get"

[[connection]]
from = "args/1"
to = "to_number"

[[process]]
alias = "to_number"
source = "lib://flowstdlib/fmt/to_number"

####### All numbers - Sequence
# Generate the range of numbers from 1..limit of possible primes
[[process]]
alias = "candidates"
source = "lib://flowstdlib/math/sequence"
input.start = {once =  1}
input.step = {once =  1}

[[connection]]
from = "to_number"
to = "candidates/end"

######### All numbers - gather into an Array
[[process]]
alias = "all-numbers"
source = "lib://flowstdlib/data/accumulate"
input.partial = {once =  []}

[[connection]]
from = "candidates/sequence"
to = "all-numbers/values"

[[connection]]
from = "to_number"
to = "all-numbers/chunk_size"

[[connection]] # loop-back
from = "all-numbers/chunk_size"
to = "all-numbers/chunk_size"

[[connection]]
from = "all-numbers/partial"
to = "all-numbers/partial"

####### Composites
[[process]]
alias = "composites"
source = "composites"

[[connection]]
from = "to_number"
to = "composites/limit"

####### Remove composites from entire list
[[process]]
alias = "subtract"
source = "lib://flowstdlib/data/remove"
input.value = { once =  9 }

[[connection]]
from = "all-numbers/chunk"
to = "subtract/array"

[[connection]]
from = "composites/composites"
to = "subtract/value"

[[connection]]
from = "subtract"
to = "subtract/array"

#### debug
[[connection]]
from = "composites/composites"
to = "print"

####### Output
[[process]]
alias = "print"
source = "lib://flowruntime/stdio/stdout"

