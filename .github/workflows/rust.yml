name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule: # Build every day at 5PM UTC
    - cron: '0 17 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux, macos ]
        include:
          - build: linux
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: nightly

    steps:
    - uses: actions/checkout@v2

    - name: Cache Cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-stable-cargo-registry-

    - name: SetupEnvVars
      run: echo "FLOW_LIB_PATH=$GITHUB_WORKSPACE,$GITHUB_WORKSPACE/flowr/src/lib" >> "$GITHUB_ENV"

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: clippy

    - name: InstallLinuxDependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -y install libzmq3-dev binaryen

    - name: InstallMacDependencies
      if: matrix.os == 'macos-latest'
      run: brew install zmq binaryen

    - name: AddWasmtarget
      run: rustup target add wasm32-unknown-unknown

    - name: InstallWasmTools
      run: cargo install wasm-gc wasm-snip

    - name: Build-flowc
      run: cargo build -p flowc

    - name: BuildFlowstdlib
      run: cargo build -p flowstdlib

    - name: OptimizeFlowstdLibWasm
      run: make optimize-flowstdlib

    - name: Clippy
      run: |
        rustup component add clippy
        cargo clippy -- -D warnings

    - name: ConfigureCoverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo install grcov
        rustup component add llvm-tools-preview
        echo RUSTFLAGS="-Zinstrument-coverage" >> "$GITHUB_ENV"
        echo LLVM_PROFILE_FILE="flow-%p-%m.profraw" >> "$GITHUB_ENV"

    - name: Run tests
      run: cargo test

    - name: UploadCoverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
        bash <(curl -s https://codecov.io/bash) -f lcov.info
        rm -f lcov.info

    - name: Docs
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get -y install graphviz
        cargo install mdbook
        cargo install mdbook-linkcheck
        make docs
        make trim-docs

    - name: DeployDocsToGHPages
      uses: JamesIves/github-pages-deploy-action@4.1.4
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/master'
      with:
        branch: gh-pages
        folder: target/html