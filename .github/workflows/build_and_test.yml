name: Build and Test with Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule: # Build every day at 5PM UTC
    - cron: '0 17 * * *'

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [ macos-latest, ubuntu-latest ]
          rust: [ nightly ]

    steps:
    - uses: actions/checkout@v2

    - name: SetupPaths
      run: |
        echo "FLOW_LIB_PATH=$HOME/.flow/lib" >> "$GITHUB_ENV"
        echo "PATH=$GITHUB_WORKSPACE/target/debug:$PATH" >> "$GITHUB_ENV"

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: clippy

    - name: Cargo Cache
      uses: actions/cache@v1
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo_cache-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo_cache-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo_cache-

    - name: InstallLinuxDependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libzmq3-dev binaryen

    - name: InstallMacDependencies
      if: matrix.os == 'macos-latest'
      run: brew install zmq binaryen

    - name: AddWasmTarget
      run: rustup target add wasm32-unknown-unknown

    - name: InstallWasmTools
      run: cargo install wasm-gc wasm-snip

    - name: ConfigureCoverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo install grcov
        sudo apt-get -y install lcov
        rustup component add llvm-tools-preview
        echo RUSTFLAGS="-C instrument-coverage" >> "$GITHUB_ENV"
        echo LLVM_PROFILE_FILE="flow-%p-%m.profraw" >> "$GITHUB_ENV"

    - name: build-binaries
      run: |
        cargo build -p flowc
        cargo build -p flowr
        cargo build --manifest-path flowrex/Cargo.toml

    - name: clippy
      run: cargo clippy --tests -- -D warnings

    - name: build
      run: cargo build --features "wasm"

    - name: test
      run: cargo test --features "online_tests","wasm"

    - name: UploadCoverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
        lcov --remove lcov.info '/Applications/*' 'target/debug/build/**' '/usr*' '**/errors.rs' '**/build.rs' '*tests/*' -o lcov.info
        bash <(curl -s https://codecov.io/bash) -f lcov.info
        rm -f lcov.info